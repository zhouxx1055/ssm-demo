<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 确保包路径和spring自动扫描路径一致 -->

<mapper namespace="com.zxx.demo.dao.sys.user.UserMapper">


    <!-- 为了返回List类型而定义的resultMap -->
    <resultMap type="com.zxx.demo.module.dto.UserDto" id="resultListUser">
        <id column="id" property="id" javaType="Long" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" javaType="String" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" javaType="String" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" javaType="String" jdbcType="VARCHAR"/>
        <result column="user_pwd" property="userPwd" javaType="String" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" javaType="Short" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result column="delete_flag" property="deleteFlag" javaType="Short" jdbcType="TINYINT"/>
    </resultMap>

    <!-- id要与接口方法名相同 -->
    <!-- SQL语句中的参数名称（#{id}），要与java代码中的参数bean的数据字段相同，这里是UserDto.id字段 -->
    <!-- type属性可省略 -->

    <!-- 单条插入 -->
    <insert id="insertUser" parameterType="com.zxx.demo.module.dto.UserDto" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name, user_phone, user_email, user_pwd, user_sex)
         values( #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, #{userSex,jdbcType=TINYINT})
    </insert>

    <!-- 多条插入 -->  <!--  void insertBatchUser(@Param("users") List<User> users); -->
    <insert id="insertBatchUser" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        insert into sys_user(user_name, user_phone, user_email, user_pwd, user_sex)
        values
        <foreach collection="users" item="user" separator=",">
            ( #{user.userName}, #{user.userPhone}, #{user.userEmail}, #{user.userPwd}, #{user.userSex})
        </foreach>
    </insert>

    <!-- 删除:直接数据库删除 -->
    <update id="deleteUserById"  parameterType="com.zxx.demo.module.dto.UserDto">
        DELETE FROM sys_user  WHERE id=#{id}
    </update>

    <!-- 删除:逻辑删除 -->
    <update id="deleteUser"  parameterType="com.zxx.demo.module.dto.UserDto">
        UPDATE  sys_user  SET delete_flag = 1 ,update_time=now()
        <where>
            <if test="id != null ">
                and id=#{id,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
        </where>
    </update>

    <!-- 更新 -->
    <!-- 更新带上update_time，乐观锁 -->
    <update id="updateUser"  parameterType="com.zxx.demo.module.dto.UserDto">
        UPDATE sys_user
        <trim prefix="set" suffixOverrides=",">
            <if test="userPhone!=null">SRC_ID=#{userPhone},</if>
            <if test="userEmail!=null">SRC_TYPE=#{userEmail},</if>
            <if test="userPwd!=null">DEST_ID=#{userPwd},</if>
            <if test="userSex!=null">DEST_TYPE=#{userSex},</if>
            <if test="1==1">update_time=now(),</if>
        </trim>
        <where>
            <if test="id != null ">
                and id=#{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="1==1">
            and update_time = #{updateTime}
            </if>
        </where>
    </update>


    <!-- 查询单条记录 -->
    <select id="getUser" parameterType="com.zxx.demo.module.dto.UserDto" resultType="com.zxx.demo.module.dto.UserDto">
        select * from sys_user
        <where>
            <if test="id != null ">
                and id=#{id,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!-- 查询多条记录 -->
    <select id="getUserList" parameterType="com.zxx.demo.module.dto.UserDto" resultMap="resultListUser">
        select * from sys_user
        <where>
            <if test="id != null ">
                and id=#{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone = #{userPhone}
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
            <if test="userSex != null and userSex != ''">
                and user_sex = #{userSex}
            </if>
            <if test="beginTime != null and beginTime != ''">
                <![CDATA[   and create_time >= #{beginTime} ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[ and create_time <= #{endTime} ]]>
            </if>
            <if test="1==1">
                and delete_flag = 0
            </if>
        </where>
    </select>
    <!-- 查询是否存在 -->
    <select id="getExistsUser" parameterType="com.zxx.demo.module.dto.UserDto" resultType="Integer">
        select count(*) from sys_user
        <where>
            <if test="id != null ">
                and id=#{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone = #{userPhone}
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
            <if test="userSex != null and userSex != ''">
                and user_sex = #{userSex}
            </if>
            <if test="beginTime != null and beginTime != ''">
                <![CDATA[   and create_time >= #{beginTime} ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[ and create_time <= #{endTime} ]]>
            </if>
            <if test="1==1">
                and delete_flag = 0
            </if>
        </where>
        limit 1
    </select>

    <!-- 查询单条记录 -->
    <select id="getUserById" parameterType="com.zxx.demo.module.dto.UserDto" resultType="com.zxx.demo.module.dto.UserDto">
        select * from sys_user      where id = #{id,jdbcType=BIGINT}
    </select>


    <!-- 模糊查询 -->
    <select id="getUserListByLike" parameterType="com.zxx.demo.module.dto.UserDto" resultMap="resultListUser">
        select * from sys_user
        <where>
            <if test="userName != null and userName != ''">
                and user_name LIKE CONCAT(CONCAT('%', #{userName}), '%')
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone LIKE CONCAT(CONCAT('%', #{userPhone}), '%')
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email  LIKE CONCAT(CONCAT('%', #{userEmail}), '%')
            </if>
            <if test="userSex != null and userSex != ''">
                and user_sex = #{userSex}
            </if>
            <if test="beginTime != null and beginTime != ''">
                <![CDATA[   and create_time >= #{beginTime} ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[ and create_time <= #{endTime} ]]>
            </if>
            <if test="1==1">
                and delete_flag = 0
            </if>
        </where>
    </select>

    <!-- in 查询 @Param("list")List<Long> list -->
    <select id="getUserListByIn" parameterType="com.zxx.demo.module.dto.UserDto" resultMap="resultListUser">
        select * from sys_user
        where delete_flag = 0
        and id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

</mapper>